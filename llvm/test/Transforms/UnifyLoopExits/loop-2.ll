; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -unify-loop-exits -S | FileCheck %s

define void @loop_1(i1 %PredA, i1 %PredB, i1 %PredC) {
; CHECK-LABEL: @loop_1(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label %A
; CHECK:       A:
; CHECK-NEXT:    br i1 %PredA, label %B, label %[[LOOPEXITBLOCK:.*]]
; CHECK:       B:
; CHECK-NEXT:    br i1 %PredB, label %C, label %[[LOOPEXITBLOCK]]
; CHECK:       C:
; CHECK-NEXT:    br i1 %PredC, label %D, label %[[LOOPEXITBLOCK]]
; CHECK:       D:
; CHECK-NEXT:    br label %A
; CHECK:       X:
; CHECK-NEXT:    br label %exit
; CHECK:       Y:
; CHECK-NEXT:    br label %exit
; CHECK:       Z:
; CHECK-NEXT:    br label %exit
; CHECK:       exit:
; CHECK-NEXT:    ret void
; CHECK:       [[LOOPEXITBLOCK]]:
; CHECK-NEXT:    [[TMP0:%.*]] = phi i1 [ true, %A ], [ false, %B ], [ false, %C ]
; CHECK-NEXT:    [[TMP1:%.*]] = phi i1 [ false, %A ], [ true, %B ], [ false, %C ]
; CHECK-NEXT:    br i1 [[TMP0]], label %X, label %[[LOOPEXITBLOCK1:.*]]
; CHECK:       [[LOOPEXITBLOCK1]]:
; CHECK-NEXT:    br i1 [[TMP1]], label %Y, label %Z
;
entry:
  br label %A

A:                                                ; preds = %D, %entry
  br i1 %PredA, label %B, label %X

B:                                                ; preds = %A
  br i1 %PredB, label %C, label %Y

C:                                                ; preds = %B
  br i1 %PredC, label %D, label %Z

D:                                                ; preds = %C
  br label %A

X:                                                ; preds = %B
  br label %exit

Y:                                                ; preds = %G, %D, %C
  br label %exit

Z:                                                ; preds = %entry
  br label %exit

exit:                                             ; preds = %F, %E
  ret void
}
